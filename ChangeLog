=====================
exact-real Change Log
=====================

.. current developments

v2.2.0
====================

**Added:**

* Added `Element::coefficients()` and `Element::rationalCoefficients()` for
  the deprecated `Element::coefficients<C>()`.

* Explicit overloads of `Element::operator*=` and `Element::operator/=` for
  `mpz_class` and `mpq_class` since the old template-based approach is not
  supported when building on clang with `-fvisibility=hidden`.

**Deprecated:**

* Deprecated `Element::coefficients<C>()`. The method is not visible when
  building with clang and `fvisibility=hidden`, `coefficients()` and
  `rationalCoefficients()` should be used instead.

**Fixed:**

* Printing of elements when compiling with clang.



v2.1.0
====================

**Changed:**

* Renamed `exact-real.hpp` to `local.hpp`. The old header file `exact-real.hpp`
  still exists. However, it imports the entire exact-real API so in particular
  `local.hpp`.

**Fixed:**

* Fixed compilation error on macOS: `'value' is unavailable: introduced in macOS 10.13`



v2.0.0
====================

**Removed:**

* Removed the number field constructors that use the old e-antic API
  (1.0.0-rc.1 to 1.0.0-rc.13.) This is a breaking API & ABI change.

**Fixed:**

* Adapted to upstream changes in the latest e-antic rc.



v1.6.1
====================

**Fixed:**

* fixed serialization of elements in number field modules, i.e., added missing `renfxx_cereal.h` header



v1.6.0
====================

**Added:**

* Allow disabling of assertions and checks at runtime with the environment variables `LIBEXACTREAL_NOASSERT` and `LIBEXACTREAL_NOCHECK`.



v1.5.1
====================

**Fixed:**

* do not record code coverage for tests themselves
* fixed code coverage reports
* symbol map for version scripts



v1.5.0
====================

**Added:**

* assignment operator `exactreal::Arb = mpz_class`.

**Fixed:**

* initialization of `exactreal::Arb` from `long long` on non-LP64 systems such as Windows.
* remove bogus gmpxxyy dependency from libexactreal package



v1.4.3
====================

**Changed:**

* speed up floor division



v1.4.2
====================

**Fixed:**

* cache arf conversions to speed up arithmetic (in particular with multiple generators)
* reduced number of symbols exported so that header-only libraries such as cereal can be used with conflicting versions (to some extent)



v1.4.1
====================

**Fixed:**

* comparison operators in SageMath 9.2



v1.4.0
====================

**Added:**

* make `Arf`, `IntegerRing`, `RationalField`, `NumberField` hashable

**Changed:**

* simplified internal factory pattern by ugrading unique-factory

**Fixed:**

* make codecov work without CI token
* Fixed an incompatibility with cppyy 1.8.3. We now require at least 1.8.3 for Arb/Arf arithmetic to work.
* Fixed a memory leak when printing; this leak is not spotted by valgrind since
  the memory is allocated in a memory pool (we think.) We found that leak with
  gperftools.

* Free flint memory when running tests so gperftools does not get confused by
  memory pools there.



v1.3.2
====================

**Fixed:**

* Adapted to changes in cppyythonizations and in the stable release of e-antic. (This changes the serialization format slightly which we do not consider stable yet anyway.)
* Do not check for gmpxxll in configure. We ship a version for compilation and do not need it at runtime.
* in the SageMath interface, an element that is directly initialized with a zero element from libintervalxt does now remember its containing module.



v1.3.1
====================

**Fixed:**

* deserialization of modules over number fields; shared pointers to renf_class was not compared correctly which lead to a module not being identical to a deserialization of a serialization of itself; part of #106.
* some minor C++ coding style such as nullopt instead of {}



v1.3.0
====================

**Changed:**

* compressed output of coefficients in serialization, used to be '{coefficients:[{value0:...}, {value0:...}]}', now that extra layer of "value0" is gone.



v1.2.1
====================

**Fixed:**

* deserialization of multiple elements at the same time; there was a bug that
  only the first element managed to deserialize its containing module.



v1.2.0
====================

**Added:**

* Element::simplify() to drop unnecessary generators

**Changed:**

* improved Module::promote(); should be much faster now and also works when the argument is not a supermodule
* speed up Python interface by simplifying for multiplications & divisions



v1.1.1
====================

**Fixed:**

* trivial bug in compositum computation



v1.1.0
====================

**Added:**

* safety checks to rever deploy script

**Fixed:**

* adapted to changes in e-antic upstream, namely `renf_elem_class::parent()` is
  now never a null pointer since the special handling of rational numbers has
  been dropped upstream.



v1.0.2
====================

**Fixed:**

* operator ** for SageMath wrapper



v1.0.1
====================

**Changed:**

* release new versions with rever

**Fixed:**

* expected output in pyexactreal tests due to changed printing in pyeantic


