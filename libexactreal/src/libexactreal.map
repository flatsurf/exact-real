# This file controls which symbols libexactreal exports on Linux.
# Note that -fvisibility=hidden might not work as it has trouble with the
# visibility of our explicitly instantiated templates. E.g., it cannot handle
# Element<> which inherits from a boost class that has no explicit visibility
# attribute set.
LIBEXACTREAL_3.0.0 {
  global:
    extern "C++" {
      "exactreal::Arb& exactreal::Arb::operator=<int, 0>(int)";
      "exactreal::Arb& exactreal::Arb::operator=<long long, 0>(long long)";
      "exactreal::Arb& exactreal::Arb::operator=<long, 0>(long)";
      "exactreal::Arb& exactreal::Arb::operator=<short, 0>(short)";
      "exactreal::Arb& exactreal::Arb::operator=<unsigned int, 0>(unsigned int)";
      "exactreal::Arb& exactreal::Arb::operator=<unsigned long long, 0>(unsigned long long)";
      "exactreal::Arb& exactreal::Arb::operator=<unsigned long, 0>(unsigned long)";
      "exactreal::Arb& exactreal::Arb::operator=<unsigned short, 0>(unsigned short)";
      "exactreal::Arb::Arb()";
      "exactreal::Arb::Arb(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&, long)";
      "exactreal::Arb::Arb(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)";
      "exactreal::Arb::Arb(eantic::renf_elem_class const&, long)";
      "exactreal::Arb::Arb(exactreal::Arb const&)";
      "exactreal::Arb::Arb(exactreal::Arb&&)";
      "exactreal::Arb::Arb(exactreal::Arf const&)";
      "exactreal::Arb::Arb(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long)";
      "exactreal::Arb::Arb(std::pair<exactreal::Arf, exactreal::Arf> const&, long)";
      "exactreal::Arb::Arb<int, 0>(int)";
      "exactreal::Arb::Arb<long long, 0>(long long)";
      "exactreal::Arb::Arb<long, 0>(long)";
      "exactreal::Arb::Arb<short, 0>(short)";
      "exactreal::Arb::Arb<unsigned int, 0>(unsigned int)";
      "exactreal::Arb::Arb<unsigned long long, 0>(unsigned long long)";
      "exactreal::Arb::Arb<unsigned long, 0>(unsigned long)";
      "exactreal::Arb::Arb<unsigned short, 0>(unsigned short)";
      "exactreal::Arb::arb_t() const";
      "exactreal::Arb::arb_t()";
      "exactreal::Arb::equal(exactreal::Arb const&) const";
      "exactreal::Arb::indeterminate()";
      "exactreal::Arb::is_exact() const";
      "exactreal::Arb::is_finite() const";
      "exactreal::Arb::neg_inf()";
      "exactreal::Arb::one()";
      "exactreal::Arb::operator double() const";
      "exactreal::Arb::operator std::pair<exactreal::Arf, exactreal::Arf>() const";
      "exactreal::Arb::operator!=(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&) const";
      "exactreal::Arb::operator!=(exactreal::Arb const&) const";
      "exactreal::Arb::operator-() const";
      "exactreal::Arb::operator<(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&) const";
      "exactreal::Arb::operator<(exactreal::Arb const&) const";
      "exactreal::Arb::operator<=(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&) const";
      "exactreal::Arb::operator<=(exactreal::Arb const&) const";
      "exactreal::Arb::operator=(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)";
      "exactreal::Arb::operator=(exactreal::Arb const&)";
      "exactreal::Arb::operator=(exactreal::Arb&&)";
      "exactreal::Arb::operator==(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&) const";
      "exactreal::Arb::operator==(exactreal::Arb const&) const";
      "exactreal::Arb::operator>(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&) const";
      "exactreal::Arb::operator>(exactreal::Arb const&) const";
      "exactreal::Arb::operator>=(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&) const";
      "exactreal::Arb::operator>=(exactreal::Arb const&) const";
      "exactreal::Arb::pos_inf()";
      "exactreal::Arb::randtest(flint::frandxx&, long, long)";
      "exactreal::Arb::randtest_exact(flint::frandxx&, long, long)";
      "exactreal::Arb::zero()";
      "exactreal::Arb::zero_pm_inf()";
      "exactreal::Arb::~Arb()";
      "exactreal::Arf::Arf()";
      "exactreal::Arf::Arf(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, long)";
      "exactreal::Arf::Arf(double)";
      "exactreal::Arf::Arf(exactreal::Arf const&)";
      "exactreal::Arf::Arf(exactreal::Arf&&)";
      "exactreal::Arf::Arf(int)";
      "exactreal::Arf::Arf(long)";
      "exactreal::Arf::Arf(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, long)";
      "exactreal::Arf::abs() const";
      "exactreal::Arf::arf_t() const";
      "exactreal::Arf::arf_t()";
      "exactreal::Arf::ceil() const";
      "exactreal::Arf::exponent() const";
      "exactreal::Arf::floor() const";
      "exactreal::Arf::logb() const";
      "exactreal::Arf::mantissa() const";
      "exactreal::Arf::operator double() const";
      "exactreal::Arf::operator-() const";
      "exactreal::Arf::operator<(exactreal::Arf const&) const";
      "exactreal::Arf::operator<(long) const";
      "exactreal::Arf::operator<<=(long)";
      "exactreal::Arf::operator=(exactreal::Arf const&)";
      "exactreal::Arf::operator=(exactreal::Arf&&)";
      "exactreal::Arf::operator=(int)";
      "exactreal::Arf::operator=(long)";
      "exactreal::Arf::operator==(exactreal::Arf const&) const";
      "exactreal::Arf::operator==(long) const";
      "exactreal::Arf::operator>(long) const";
      "exactreal::Arf::operator>>=(long)";
      "exactreal::Arf::randtest(flint::frandxx&, long, long)";
      "exactreal::Arf::~Arf()";
      "exactreal::Element<exactreal::IntegerRing>::Element()";
      "exactreal::Element<exactreal::IntegerRing>::Element(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)";
      "exactreal::Element<exactreal::IntegerRing>::Element(std::shared_ptr<exactreal::Module<exactreal::IntegerRing> const> const&, std::vector<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, std::allocator<__gmp_expr<__mpz_struct [1], __mpz_struct [1]> > > const&)";
      "exactreal::Element<exactreal::IntegerRing>::arb(long) const";
      "exactreal::Element<exactreal::IntegerRing>::ceil() const";
      "exactreal::Element<exactreal::IntegerRing>::coefficients() const";
      "exactreal::Element<exactreal::IntegerRing>::floor() const";
      "exactreal::Element<exactreal::IntegerRing>::floordiv(exactreal::Element<exactreal::IntegerRing> const&) const";
      "exactreal::Element<exactreal::IntegerRing>::module() const";
      "exactreal::Element<exactreal::IntegerRing>::operator bool() const";
      "exactreal::Element<exactreal::IntegerRing>::operator double() const";
      "exactreal::Element<exactreal::IntegerRing>::operator std::optional<__gmp_expr<__mpq_struct [1], __mpq_struct [1]> >() const";
      "exactreal::Element<exactreal::IntegerRing>::operator std::optional<__gmp_expr<__mpz_struct [1], __mpz_struct [1]> >() const";
      "exactreal::Element<exactreal::IntegerRing>::operator*=(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&)";
      "exactreal::Element<exactreal::IntegerRing>::operator*=(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)";
      "exactreal::Element<exactreal::IntegerRing>::operator*=(exactreal::Element<exactreal::IntegerRing> const&)";
      "exactreal::Element<exactreal::IntegerRing>::operator*=(exactreal::RealNumber const&)";
      "exactreal::Element<exactreal::IntegerRing>::operator*=(int)";
      "exactreal::Element<exactreal::IntegerRing>::operator*=(long long)";
      "exactreal::Element<exactreal::IntegerRing>::operator*=(long)";
      "exactreal::Element<exactreal::IntegerRing>::operator*=(short)";
      "exactreal::Element<exactreal::IntegerRing>::operator*=(unsigned int)";
      "exactreal::Element<exactreal::IntegerRing>::operator*=(unsigned long long)";
      "exactreal::Element<exactreal::IntegerRing>::operator*=(unsigned long)";
      "exactreal::Element<exactreal::IntegerRing>::operator*=(unsigned short)";
      "exactreal::Element<exactreal::IntegerRing>::operator+=(exactreal::Element<exactreal::IntegerRing> const&)";
      "exactreal::Element<exactreal::IntegerRing>::operator-() const";
      "exactreal::Element<exactreal::IntegerRing>::operator-=(exactreal::Element<exactreal::IntegerRing> const&)";
      "exactreal::Element<exactreal::IntegerRing>::operator/=(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&)";
      "exactreal::Element<exactreal::IntegerRing>::operator/=(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)";
      "exactreal::Element<exactreal::IntegerRing>::operator/=(int)";
      "exactreal::Element<exactreal::IntegerRing>::operator/=(long long)";
      "exactreal::Element<exactreal::IntegerRing>::operator/=(long)";
      "exactreal::Element<exactreal::IntegerRing>::operator/=(short)";
      "exactreal::Element<exactreal::IntegerRing>::operator/=(unsigned int)";
      "exactreal::Element<exactreal::IntegerRing>::operator/=(unsigned long long)";
      "exactreal::Element<exactreal::IntegerRing>::operator/=(unsigned long)";
      "exactreal::Element<exactreal::IntegerRing>::operator/=(unsigned short)";
      "exactreal::Element<exactreal::IntegerRing>::operator<(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&) const";
      "exactreal::Element<exactreal::IntegerRing>::operator<(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) const";
      "exactreal::Element<exactreal::IntegerRing>::operator<(exactreal::Element<exactreal::IntegerRing> const&) const";
      "exactreal::Element<exactreal::IntegerRing>::operator<(exactreal::RealNumber const&) const";
      "exactreal::Element<exactreal::IntegerRing>::operator<(int) const";
      "exactreal::Element<exactreal::IntegerRing>::operator<(long long) const";
      "exactreal::Element<exactreal::IntegerRing>::operator<(long long) const";
      "exactreal::Element<exactreal::IntegerRing>::operator<(long) const";
      "exactreal::Element<exactreal::IntegerRing>::operator<(short) const";
      "exactreal::Element<exactreal::IntegerRing>::operator<(unsigned int) const";
      "exactreal::Element<exactreal::IntegerRing>::operator<(unsigned long long) const";
      "exactreal::Element<exactreal::IntegerRing>::operator<(unsigned long) const";
      "exactreal::Element<exactreal::IntegerRing>::operator<(unsigned short) const";
      "exactreal::Element<exactreal::IntegerRing>::operator==(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&) const";
      "exactreal::Element<exactreal::IntegerRing>::operator==(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) const";
      "exactreal::Element<exactreal::IntegerRing>::operator==(exactreal::Element<exactreal::IntegerRing> const&) const";
      "exactreal::Element<exactreal::IntegerRing>::operator==(exactreal::RealNumber const&) const";
      "exactreal::Element<exactreal::IntegerRing>::operator==(int) const";
      "exactreal::Element<exactreal::IntegerRing>::operator==(long long) const";
      "exactreal::Element<exactreal::IntegerRing>::operator==(long long) const";
      "exactreal::Element<exactreal::IntegerRing>::operator==(long) const";
      "exactreal::Element<exactreal::IntegerRing>::operator==(short) const";
      "exactreal::Element<exactreal::IntegerRing>::operator==(unsigned int) const";
      "exactreal::Element<exactreal::IntegerRing>::operator==(unsigned long long) const";
      "exactreal::Element<exactreal::IntegerRing>::operator==(unsigned long) const";
      "exactreal::Element<exactreal::IntegerRing>::operator==(unsigned short) const";
      "exactreal::Element<exactreal::IntegerRing>::operator>(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&) const";
      "exactreal::Element<exactreal::IntegerRing>::operator>(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) const";
      "exactreal::Element<exactreal::IntegerRing>::operator>(exactreal::RealNumber const&) const";
      "exactreal::Element<exactreal::IntegerRing>::operator>(int) const";
      "exactreal::Element<exactreal::IntegerRing>::operator>(long long) const";
      "exactreal::Element<exactreal::IntegerRing>::operator>(long long) const";
      "exactreal::Element<exactreal::IntegerRing>::operator>(long) const";
      "exactreal::Element<exactreal::IntegerRing>::operator>(short) const";
      "exactreal::Element<exactreal::IntegerRing>::operator>(unsigned int) const";
      "exactreal::Element<exactreal::IntegerRing>::operator>(unsigned long long) const";
      "exactreal::Element<exactreal::IntegerRing>::operator>(unsigned long) const";
      "exactreal::Element<exactreal::IntegerRing>::operator>(unsigned short) const";
      "exactreal::Element<exactreal::IntegerRing>::operator[](long) const";
      "exactreal::Element<exactreal::IntegerRing>::promote(std::shared_ptr<exactreal::Module<exactreal::IntegerRing> const> const&)";
      "exactreal::Element<exactreal::IntegerRing>::rationalCoefficients() const";
      "exactreal::Element<exactreal::IntegerRing>::simplify()";
      "exactreal::Element<exactreal::IntegerRing>::truediv(exactreal::Element<exactreal::IntegerRing> const&) const";
      "exactreal::Element<exactreal::IntegerRing>::unit() const";
      "exactreal::Element<exactreal::NumberField>& exactreal::Element<exactreal::NumberField>::operator*=<true, true>(eantic::renf_elem_class const&)";
      "exactreal::Element<exactreal::NumberField>& exactreal::Element<exactreal::NumberField>::operator/=<true, true>(eantic::renf_elem_class const&)";
      "exactreal::Element<exactreal::NumberField>::Element()";
      "exactreal::Element<exactreal::NumberField>::Element(eantic::renf_elem_class const&)";
      "exactreal::Element<exactreal::NumberField>::Element(std::shared_ptr<exactreal::Module<exactreal::NumberField> const> const&, std::vector<eantic::renf_elem_class, std::allocator<eantic::renf_elem_class> > const&)";
      "exactreal::Element<exactreal::NumberField>::Element<true, true>(exactreal::Element<exactreal::IntegerRing> const&)";
      "exactreal::Element<exactreal::NumberField>::Element<true, true>(exactreal::Element<exactreal::RationalField> const&)";
      "exactreal::Element<exactreal::NumberField>::arb(long) const";
      "exactreal::Element<exactreal::NumberField>::ceil() const";
      "exactreal::Element<exactreal::NumberField>::coefficients() const";
      "exactreal::Element<exactreal::NumberField>::floor() const";
      "exactreal::Element<exactreal::NumberField>::floordiv(exactreal::Element<exactreal::NumberField> const&) const";
      "exactreal::Element<exactreal::NumberField>::module() const";
      "exactreal::Element<exactreal::NumberField>::operator bool() const";
      "exactreal::Element<exactreal::NumberField>::operator double() const";
      "exactreal::Element<exactreal::NumberField>::operator std::optional<__gmp_expr<__mpq_struct [1], __mpq_struct [1]> >() const";
      "exactreal::Element<exactreal::NumberField>::operator std::optional<__gmp_expr<__mpz_struct [1], __mpz_struct [1]> >() const";
      "exactreal::Element<exactreal::NumberField>::operator*=(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&)";
      "exactreal::Element<exactreal::NumberField>::operator*=(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)";
      "exactreal::Element<exactreal::NumberField>::operator*=(exactreal::Element<exactreal::NumberField> const&)";
      "exactreal::Element<exactreal::NumberField>::operator*=(exactreal::RealNumber const&)";
      "exactreal::Element<exactreal::NumberField>::operator*=(int)";
      "exactreal::Element<exactreal::NumberField>::operator*=(long long)";
      "exactreal::Element<exactreal::NumberField>::operator*=(long)";
      "exactreal::Element<exactreal::NumberField>::operator*=(short)";
      "exactreal::Element<exactreal::NumberField>::operator*=(unsigned int)";
      "exactreal::Element<exactreal::NumberField>::operator*=(unsigned long long)";
      "exactreal::Element<exactreal::NumberField>::operator*=(unsigned long)";
      "exactreal::Element<exactreal::NumberField>::operator*=(unsigned short)";
      "exactreal::Element<exactreal::NumberField>::operator+=(exactreal::Element<exactreal::NumberField> const&)";
      "exactreal::Element<exactreal::NumberField>::operator-() const";
      "exactreal::Element<exactreal::NumberField>::operator-=(exactreal::Element<exactreal::NumberField> const&)";
      "exactreal::Element<exactreal::NumberField>::operator/=(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&)";
      "exactreal::Element<exactreal::NumberField>::operator/=(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)";
      "exactreal::Element<exactreal::NumberField>::operator/=(int)";
      "exactreal::Element<exactreal::NumberField>::operator/=(long long)";
      "exactreal::Element<exactreal::NumberField>::operator/=(long)";
      "exactreal::Element<exactreal::NumberField>::operator/=(short)";
      "exactreal::Element<exactreal::NumberField>::operator/=(unsigned int)";
      "exactreal::Element<exactreal::NumberField>::operator/=(unsigned long long)";
      "exactreal::Element<exactreal::NumberField>::operator/=(unsigned long)";
      "exactreal::Element<exactreal::NumberField>::operator/=(unsigned short)";
      "exactreal::Element<exactreal::NumberField>::operator<(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&) const";
      "exactreal::Element<exactreal::NumberField>::operator<(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) const";
      "exactreal::Element<exactreal::NumberField>::operator<(exactreal::Element<exactreal::NumberField> const&) const";
      "exactreal::Element<exactreal::NumberField>::operator<(exactreal::RealNumber const&) const";
      "exactreal::Element<exactreal::NumberField>::operator<(int) const";
      "exactreal::Element<exactreal::NumberField>::operator<(long long) const";
      "exactreal::Element<exactreal::NumberField>::operator<(long long) const";
      "exactreal::Element<exactreal::NumberField>::operator<(long long) const";
      "exactreal::Element<exactreal::NumberField>::operator<(long) const";
      "exactreal::Element<exactreal::NumberField>::operator<(short) const";
      "exactreal::Element<exactreal::NumberField>::operator<(unsigned int) const";
      "exactreal::Element<exactreal::NumberField>::operator<(unsigned long long) const";
      "exactreal::Element<exactreal::NumberField>::operator<(unsigned long long) const";
      "exactreal::Element<exactreal::NumberField>::operator<(unsigned long) const";
      "exactreal::Element<exactreal::NumberField>::operator<(unsigned short) const";
      "exactreal::Element<exactreal::NumberField>::operator==(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&) const";
      "exactreal::Element<exactreal::NumberField>::operator==(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) const";
      "exactreal::Element<exactreal::NumberField>::operator==(exactreal::Element<exactreal::NumberField> const&) const";
      "exactreal::Element<exactreal::NumberField>::operator==(exactreal::RealNumber const&) const";
      "exactreal::Element<exactreal::NumberField>::operator==(int) const";
      "exactreal::Element<exactreal::NumberField>::operator==(long long) const";
      "exactreal::Element<exactreal::NumberField>::operator==(long long) const";
      "exactreal::Element<exactreal::NumberField>::operator==(long) const";
      "exactreal::Element<exactreal::NumberField>::operator==(short) const";
      "exactreal::Element<exactreal::NumberField>::operator==(unsigned int) const";
      "exactreal::Element<exactreal::NumberField>::operator==(unsigned long long) const";
      "exactreal::Element<exactreal::NumberField>::operator==(unsigned long) const";
      "exactreal::Element<exactreal::NumberField>::operator==(unsigned short) const";
      "exactreal::Element<exactreal::NumberField>::operator>(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&) const";
      "exactreal::Element<exactreal::NumberField>::operator>(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) const";
      "exactreal::Element<exactreal::NumberField>::operator>(exactreal::RealNumber const&) const";
      "exactreal::Element<exactreal::NumberField>::operator>(int) const";
      "exactreal::Element<exactreal::NumberField>::operator>(long long) const";
      "exactreal::Element<exactreal::NumberField>::operator>(long long) const";
      "exactreal::Element<exactreal::NumberField>::operator>(long long) const";
      "exactreal::Element<exactreal::NumberField>::operator>(long) const";
      "exactreal::Element<exactreal::NumberField>::operator>(short) const";
      "exactreal::Element<exactreal::NumberField>::operator>(unsigned int) const";
      "exactreal::Element<exactreal::NumberField>::operator>(unsigned long long) const";
      "exactreal::Element<exactreal::NumberField>::operator>(unsigned long long) const";
      "exactreal::Element<exactreal::NumberField>::operator>(unsigned long) const";
      "exactreal::Element<exactreal::NumberField>::operator>(unsigned short) const";
      "exactreal::Element<exactreal::NumberField>::operator[](long) const";
      "exactreal::Element<exactreal::NumberField>::promote(std::shared_ptr<exactreal::Module<exactreal::NumberField> const> const&)";
      "exactreal::Element<exactreal::NumberField>::rationalCoefficients() const";
      "exactreal::Element<exactreal::NumberField>::simplify()";
      "exactreal::Element<exactreal::NumberField>::truediv(exactreal::Element<exactreal::NumberField> const&) const";
      "exactreal::Element<exactreal::NumberField>::unit() const";
      "exactreal::Element<exactreal::RationalField>::Element()";
      "exactreal::Element<exactreal::RationalField>::Element(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&)";
      "exactreal::Element<exactreal::RationalField>::Element(std::shared_ptr<exactreal::Module<exactreal::RationalField> const> const&, std::vector<__gmp_expr<__mpq_struct [1], __mpq_struct [1]>, std::allocator<__gmp_expr<__mpq_struct [1], __mpq_struct [1]> > > const&)";
      "exactreal::Element<exactreal::RationalField>::Element<true, true>(exactreal::Element<exactreal::IntegerRing> const&)";
      "exactreal::Element<exactreal::RationalField>::arb(long) const";
      "exactreal::Element<exactreal::RationalField>::ceil() const";
      "exactreal::Element<exactreal::RationalField>::coefficients() const";
      "exactreal::Element<exactreal::RationalField>::floor() const";
      "exactreal::Element<exactreal::RationalField>::floordiv(exactreal::Element<exactreal::RationalField> const&) const";
      "exactreal::Element<exactreal::RationalField>::module() const";
      "exactreal::Element<exactreal::RationalField>::operator bool() const";
      "exactreal::Element<exactreal::RationalField>::operator double() const";
      "exactreal::Element<exactreal::RationalField>::operator std::optional<__gmp_expr<__mpq_struct [1], __mpq_struct [1]> >() const";
      "exactreal::Element<exactreal::RationalField>::operator std::optional<__gmp_expr<__mpz_struct [1], __mpz_struct [1]> >() const";
      "exactreal::Element<exactreal::RationalField>::operator*=(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&)";
      "exactreal::Element<exactreal::RationalField>::operator*=(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)";
      "exactreal::Element<exactreal::RationalField>::operator*=(exactreal::Element<exactreal::RationalField> const&)";
      "exactreal::Element<exactreal::RationalField>::operator*=(exactreal::RealNumber const&)";
      "exactreal::Element<exactreal::RationalField>::operator*=(int)";
      "exactreal::Element<exactreal::RationalField>::operator*=(long long)";
      "exactreal::Element<exactreal::RationalField>::operator*=(long)";
      "exactreal::Element<exactreal::RationalField>::operator*=(short)";
      "exactreal::Element<exactreal::RationalField>::operator*=(unsigned int)";
      "exactreal::Element<exactreal::RationalField>::operator*=(unsigned long long)";
      "exactreal::Element<exactreal::RationalField>::operator*=(unsigned long)";
      "exactreal::Element<exactreal::RationalField>::operator*=(unsigned short)";
      "exactreal::Element<exactreal::RationalField>::operator+=(exactreal::Element<exactreal::RationalField> const&)";
      "exactreal::Element<exactreal::RationalField>::operator-() const";
      "exactreal::Element<exactreal::RationalField>::operator-=(exactreal::Element<exactreal::RationalField> const&)";
      "exactreal::Element<exactreal::RationalField>::operator/=(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&)";
      "exactreal::Element<exactreal::RationalField>::operator/=(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)";
      "exactreal::Element<exactreal::RationalField>::operator/=(int)";
      "exactreal::Element<exactreal::RationalField>::operator/=(long long)";
      "exactreal::Element<exactreal::RationalField>::operator/=(long)";
      "exactreal::Element<exactreal::RationalField>::operator/=(short)";
      "exactreal::Element<exactreal::RationalField>::operator/=(unsigned int)";
      "exactreal::Element<exactreal::RationalField>::operator/=(unsigned long long)";
      "exactreal::Element<exactreal::RationalField>::operator/=(unsigned long)";
      "exactreal::Element<exactreal::RationalField>::operator/=(unsigned short)";
      "exactreal::Element<exactreal::RationalField>::operator<(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&) const";
      "exactreal::Element<exactreal::RationalField>::operator<(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) const";
      "exactreal::Element<exactreal::RationalField>::operator<(exactreal::Element<exactreal::RationalField> const&) const";
      "exactreal::Element<exactreal::RationalField>::operator<(exactreal::RealNumber const&) const";
      "exactreal::Element<exactreal::RationalField>::operator<(int) const";
      "exactreal::Element<exactreal::RationalField>::operator<(long long) const";
      "exactreal::Element<exactreal::RationalField>::operator<(long) const";
      "exactreal::Element<exactreal::RationalField>::operator<(short) const";
      "exactreal::Element<exactreal::RationalField>::operator<(unsigned int) const";
      "exactreal::Element<exactreal::RationalField>::operator<(unsigned long) const";
      "exactreal::Element<exactreal::RationalField>::operator<(unsigned short) const";
      "exactreal::Element<exactreal::RationalField>::operator==(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&) const";
      "exactreal::Element<exactreal::RationalField>::operator==(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) const";
      "exactreal::Element<exactreal::RationalField>::operator==(exactreal::Element<exactreal::RationalField> const&) const";
      "exactreal::Element<exactreal::RationalField>::operator==(exactreal::RealNumber const&) const";
      "exactreal::Element<exactreal::RationalField>::operator==(int) const";
      "exactreal::Element<exactreal::RationalField>::operator==(long long) const";
      "exactreal::Element<exactreal::RationalField>::operator==(long long) const";
      "exactreal::Element<exactreal::RationalField>::operator==(long) const";
      "exactreal::Element<exactreal::RationalField>::operator==(short) const";
      "exactreal::Element<exactreal::RationalField>::operator==(unsigned int) const";
      "exactreal::Element<exactreal::RationalField>::operator==(unsigned long long) const";
      "exactreal::Element<exactreal::RationalField>::operator==(unsigned long) const";
      "exactreal::Element<exactreal::RationalField>::operator==(unsigned short) const";
      "exactreal::Element<exactreal::RationalField>::operator>(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&) const";
      "exactreal::Element<exactreal::RationalField>::operator>(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) const";
      "exactreal::Element<exactreal::RationalField>::operator>(exactreal::RealNumber const&) const";
      "exactreal::Element<exactreal::RationalField>::operator>(int) const";
      "exactreal::Element<exactreal::RationalField>::operator>(long) const";
      "exactreal::Element<exactreal::RationalField>::operator>(short) const";
      "exactreal::Element<exactreal::RationalField>::operator>(unsigned int) const";
      "exactreal::Element<exactreal::RationalField>::operator>(unsigned long) const";
      "exactreal::Element<exactreal::RationalField>::operator>(unsigned short) const";
      "exactreal::Element<exactreal::RationalField>::operator[](long) const";
      "exactreal::Element<exactreal::RationalField>::promote(std::shared_ptr<exactreal::Module<exactreal::RationalField> const> const&)";
      "exactreal::Element<exactreal::RationalField>::rationalCoefficients() const";
      "exactreal::Element<exactreal::RationalField>::simplify()";
      "exactreal::Element<exactreal::RationalField>::truediv(exactreal::Element<exactreal::RationalField> const&) const";
      "exactreal::Element<exactreal::RationalField>::unit() const";
      "exactreal::IntegerRing::IntegerRing()";
      "exactreal::IntegerRing::IntegerRing(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)";
      "exactreal::IntegerRing::arb(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, long)";
      "exactreal::IntegerRing::compositum(exactreal::IntegerRing const&, exactreal::IntegerRing const&)";
      "exactreal::IntegerRing::floor(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)";
      "exactreal::IntegerRing::rational(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)";
      "exactreal::IntegerRing::unit(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)";
      "exactreal::Module<exactreal::IntegerRing>::basis() const";
      "exactreal::Module<exactreal::IntegerRing>::gen(long) const";
      "exactreal::Module<exactreal::IntegerRing>::make(std::vector<std::shared_ptr<exactreal::RealNumber const>, std::allocator<std::shared_ptr<exactreal::RealNumber const> > > const&)";
      "exactreal::Module<exactreal::IntegerRing>::make(std::vector<std::shared_ptr<exactreal::RealNumber const>, std::allocator<std::shared_ptr<exactreal::RealNumber const> > > const&, exactreal::IntegerRing const&)";
      "exactreal::Module<exactreal::IntegerRing>::one() const";
      "exactreal::Module<exactreal::IntegerRing>::operator==(exactreal::Module<exactreal::IntegerRing> const&) const";
      "exactreal::Module<exactreal::IntegerRing>::rank() const";
      "exactreal::Module<exactreal::IntegerRing>::ring() const";
      "exactreal::Module<exactreal::IntegerRing>::span(std::shared_ptr<exactreal::Module<exactreal::IntegerRing> const> const&, std::shared_ptr<exactreal::Module<exactreal::IntegerRing> const> const&)";
      "exactreal::Module<exactreal::IntegerRing>::submodule(exactreal::Module<exactreal::IntegerRing> const&) const";
      "exactreal::Module<exactreal::IntegerRing>::zero() const";
      "exactreal::Module<exactreal::NumberField>::basis() const";
      "exactreal::Module<exactreal::NumberField>::gen(long) const";
      "exactreal::Module<exactreal::NumberField>::make(std::vector<std::shared_ptr<exactreal::RealNumber const>, std::allocator<std::shared_ptr<exactreal::RealNumber const> > > const&)";
      "exactreal::Module<exactreal::NumberField>::make(std::vector<std::shared_ptr<exactreal::RealNumber const>, std::allocator<std::shared_ptr<exactreal::RealNumber const> > > const&, exactreal::NumberField const&)";
      "exactreal::Module<exactreal::NumberField>::one() const";
      "exactreal::Module<exactreal::NumberField>::operator==(exactreal::Module<exactreal::NumberField> const&) const";
      "exactreal::Module<exactreal::NumberField>::rank() const";
      "exactreal::Module<exactreal::NumberField>::ring() const";
      "exactreal::Module<exactreal::NumberField>::span(std::shared_ptr<exactreal::Module<exactreal::NumberField> const> const&, std::shared_ptr<exactreal::Module<exactreal::NumberField> const> const&)";
      "exactreal::Module<exactreal::NumberField>::submodule(exactreal::Module<exactreal::NumberField> const&) const";
      "exactreal::Module<exactreal::NumberField>::zero() const";
      "exactreal::Module<exactreal::RationalField>::basis() const";
      "exactreal::Module<exactreal::RationalField>::gen(long) const";
      "exactreal::Module<exactreal::RationalField>::make(std::vector<std::shared_ptr<exactreal::RealNumber const>, std::allocator<std::shared_ptr<exactreal::RealNumber const> > > const&)";
      "exactreal::Module<exactreal::RationalField>::make(std::vector<std::shared_ptr<exactreal::RealNumber const>, std::allocator<std::shared_ptr<exactreal::RealNumber const> > > const&, exactreal::RationalField const&)";
      "exactreal::Module<exactreal::RationalField>::one() const";
      "exactreal::Module<exactreal::RationalField>::operator==(exactreal::Module<exactreal::RationalField> const&) const";
      "exactreal::Module<exactreal::RationalField>::rank() const";
      "exactreal::Module<exactreal::RationalField>::ring() const";
      "exactreal::Module<exactreal::RationalField>::span(std::shared_ptr<exactreal::Module<exactreal::RationalField> const> const&, std::shared_ptr<exactreal::Module<exactreal::RationalField> const> const&)";
      "exactreal::Module<exactreal::RationalField>::submodule(exactreal::Module<exactreal::RationalField> const&) const";
      "exactreal::Module<exactreal::RationalField>::zero() const";
      "exactreal::NumberField::NumberField()";
      "exactreal::NumberField::NumberField(boost::intrusive_ptr<eantic::renf_class const>)";
      "exactreal::NumberField::NumberField(eantic::renf_class const&)";
      "exactreal::NumberField::NumberField(eantic::renf_elem_class const&)";
      "exactreal::NumberField::arb(eantic::renf_elem_class const&, long)";
      "exactreal::NumberField::coerce(eantic::renf_elem_class const&) const";
      "exactreal::NumberField::compositum(exactreal::NumberField const&, exactreal::NumberField const&)";
      "exactreal::NumberField::floor(eantic::renf_elem_class const&)";
      "exactreal::NumberField::operator==(exactreal::NumberField const&) const";
      "exactreal::NumberField::rational(eantic::renf_elem_class const&)";
      "exactreal::NumberField::unit(eantic::renf_elem_class const&)";
      "exactreal::RationalField::RationalField()";
      "exactreal::RationalField::RationalField(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&)";
      "exactreal::RationalField::arb(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&, long)";
      "exactreal::RationalField::compositum(exactreal::RationalField const&, exactreal::RationalField const&)";
      "exactreal::RationalField::floor(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&)";
      "exactreal::RationalField::rational(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&)";
      "exactreal::RationalField::unit(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&)";
      "exactreal::RealNumber::arb(long) const";
      "exactreal::RealNumber::cmp(exactreal::Arb const&) const";
      "exactreal::RealNumber::deglex(exactreal::RealNumber const&) const";
      "exactreal::RealNumber::load(exactreal::IDecerealizer&, std::shared_ptr<exactreal::RealNumber const>&)";
      "exactreal::RealNumber::operator bool() const";
      "exactreal::RealNumber::operator double() const";
      "exactreal::RealNumber::operator*(exactreal::RealNumber const&) const";
      "exactreal::RealNumber::operator/(exactreal::RealNumber const&) const";
      "exactreal::RealNumber::operator<(exactreal::Arf const&) const";
      "exactreal::RealNumber::operator<(exactreal::RealNumber const&) const";
      "exactreal::RealNumber::operator==(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&) const";
      "exactreal::RealNumber::operator==(exactreal::Arf const&) const";
      "exactreal::RealNumber::operator==(exactreal::RealNumber const&) const";
      "exactreal::RealNumber::operator>(exactreal::Arf const&) const";
      "exactreal::RealNumber::random()";
      "exactreal::RealNumber::random(double)";
      "exactreal::RealNumber::random(double, exactreal::Seed)";
      "exactreal::RealNumber::random(exactreal::Arf const&, exactreal::Arf const&)";
      "exactreal::RealNumber::random(exactreal::Arf const&, exactreal::Arf const&, exactreal::Seed)";
      "exactreal::RealNumber::random(exactreal::Seed)";
      "exactreal::RealNumber::rational(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&)";
      "exactreal::RealNumber::refine(exactreal::Arb&, long) const";
      "exactreal::RealNumber::save(exactreal::ICerealizer&, std::shared_ptr<exactreal::RealNumber const> const&)";
      "exactreal::RealNumber::~RealNumber()";
      "exactreal::operator<<(std::ostream&, exactreal::Arb const&)";
      "exactreal::operator<<(std::ostream&, exactreal::Arf const&)";
      "exactreal::operator<<(std::ostream&, exactreal::RealNumber const&)";
      "std::hash<exactreal::Arf>::operator()(exactreal::Arf const&) const";
      "std::hash<exactreal::Element<exactreal::IntegerRing> >::operator()(exactreal::Element<exactreal::IntegerRing> const&) const";
      "std::hash<exactreal::Element<exactreal::NumberField> >::operator()(exactreal::Element<exactreal::NumberField> const&) const";
      "std::hash<exactreal::Element<exactreal::RationalField> >::operator()(exactreal::Element<exactreal::RationalField> const&) const";
      "std::hash<exactreal::NumberField>::operator()(exactreal::NumberField const&) const";
      "std::optional<bool> exactreal::Arb::operator!=<int, 0>(int) const";
      "std::optional<bool> exactreal::Arb::operator!=<long long, 0>(long long) const";
      "std::optional<bool> exactreal::Arb::operator!=<long, 0>(long) const";
      "std::optional<bool> exactreal::Arb::operator!=<short, 0>(short) const";
      "std::optional<bool> exactreal::Arb::operator!=<unsigned int, 0>(unsigned int) const";
      "std::optional<bool> exactreal::Arb::operator!=<unsigned long long, 0>(unsigned long long) const";
      "std::optional<bool> exactreal::Arb::operator!=<unsigned long, 0>(unsigned long) const";
      "std::optional<bool> exactreal::Arb::operator!=<unsigned short, 0>(unsigned short) const";
      "std::optional<bool> exactreal::Arb::operator< <int, 0>(int) const";
      "std::optional<bool> exactreal::Arb::operator< <long long, 0>(long long) const";
      "std::optional<bool> exactreal::Arb::operator< <long, 0>(long) const";
      "std::optional<bool> exactreal::Arb::operator< <short, 0>(short) const";
      "std::optional<bool> exactreal::Arb::operator< <unsigned int, 0>(unsigned int) const";
      "std::optional<bool> exactreal::Arb::operator< <unsigned long long, 0>(unsigned long long) const";
      "std::optional<bool> exactreal::Arb::operator< <unsigned long, 0>(unsigned long) const";
      "std::optional<bool> exactreal::Arb::operator< <unsigned short, 0>(unsigned short) const";
      "std::optional<bool> exactreal::Arb::operator<=<int, 0>(int) const";
      "std::optional<bool> exactreal::Arb::operator<=<long long, 0>(long long) const";
      "std::optional<bool> exactreal::Arb::operator<=<long, 0>(long) const";
      "std::optional<bool> exactreal::Arb::operator<=<short, 0>(short) const";
      "std::optional<bool> exactreal::Arb::operator<=<unsigned int, 0>(unsigned int) const";
      "std::optional<bool> exactreal::Arb::operator<=<unsigned long long, 0>(unsigned long long) const";
      "std::optional<bool> exactreal::Arb::operator<=<unsigned long, 0>(unsigned long) const";
      "std::optional<bool> exactreal::Arb::operator<=<unsigned short, 0>(unsigned short) const";
      "std::optional<bool> exactreal::Arb::operator==<int, 0>(int) const";
      "std::optional<bool> exactreal::Arb::operator==<long long, 0>(long long) const";
      "std::optional<bool> exactreal::Arb::operator==<long, 0>(long) const";
      "std::optional<bool> exactreal::Arb::operator==<short, 0>(short) const";
      "std::optional<bool> exactreal::Arb::operator==<unsigned int, 0>(unsigned int) const";
      "std::optional<bool> exactreal::Arb::operator==<unsigned long long, 0>(unsigned long long) const";
      "std::optional<bool> exactreal::Arb::operator==<unsigned long, 0>(unsigned long) const";
      "std::optional<bool> exactreal::Arb::operator==<unsigned short, 0>(unsigned short) const";
      "std::optional<bool> exactreal::Arb::operator><int, 0>(int) const";
      "std::optional<bool> exactreal::Arb::operator><long long, 0>(long long) const";
      "std::optional<bool> exactreal::Arb::operator><long, 0>(long) const";
      "std::optional<bool> exactreal::Arb::operator><short, 0>(short) const";
      "std::optional<bool> exactreal::Arb::operator><unsigned int, 0>(unsigned int) const";
      "std::optional<bool> exactreal::Arb::operator><unsigned long long, 0>(unsigned long long) const";
      "std::optional<bool> exactreal::Arb::operator><unsigned long, 0>(unsigned long) const";
      "std::optional<bool> exactreal::Arb::operator><unsigned short, 0>(unsigned short) const";
      "std::optional<bool> exactreal::Arb::operator>=<int, 0>(int) const";
      "std::optional<bool> exactreal::Arb::operator>=<long long, 0>(long long) const";
      "std::optional<bool> exactreal::Arb::operator>=<long, 0>(long) const";
      "std::optional<bool> exactreal::Arb::operator>=<short, 0>(short) const";
      "std::optional<bool> exactreal::Arb::operator>=<unsigned int, 0>(unsigned int) const";
      "std::optional<bool> exactreal::Arb::operator>=<unsigned long long, 0>(unsigned long long) const";
      "std::optional<bool> exactreal::Arb::operator>=<unsigned long, 0>(unsigned long) const";
      "std::optional<bool> exactreal::Arb::operator>=<unsigned short, 0>(unsigned short) const";
      "std::ostream& exactreal::operator<< <exactreal::IntegerRing>(std::ostream&, exactreal::Element<exactreal::IntegerRing> const&)";
      "std::ostream& exactreal::operator<< <exactreal::IntegerRing>(std::ostream&, exactreal::Module<exactreal::IntegerRing> const&)";
      "std::ostream& exactreal::operator<< <exactreal::NumberField>(std::ostream&, exactreal::Element<exactreal::NumberField> const&)";
      "std::ostream& exactreal::operator<< <exactreal::NumberField>(std::ostream&, exactreal::Module<exactreal::NumberField> const&)";
      "std::ostream& exactreal::operator<< <exactreal::RationalField>(std::ostream&, exactreal::Element<exactreal::RationalField> const&)";
      "std::ostream& exactreal::operator<< <exactreal::RationalField>(std::ostream&, exactreal::Module<exactreal::RationalField> const&)";
    };
};
LIBEXACTREAL_4.1.0 {
  global:
    extern "C++" {
      "exactreal::Arb::Arb(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&)";
      "exactreal::Arb::Arb(eantic::renf_elem_class const&)";
      "exactreal::Arb::operator Arf() const";
      "exactreal::Arb::unit_interval()";
      "exactreal::Arb::zero_pm_one()";
      "exactreal::Arf::operator=(double)";
      "exactreal::RealNumber::operator<(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&) const";
      "exactreal::RealNumber::operator<(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) const";
      "exactreal::RealNumber::operator==(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) const";
      "exactreal::RealNumber::operator>(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&) const";
      "exactreal::RealNumber::operator>(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) const";
      "exactreal::Seed()";
      "exactreal::Seed(unsigned int)";
      "exactreal::swap(exactreal::Arb&, exactreal::Arb&)";
      "exactreal::swap(exactreal::Arf&, exactreal::Arf&)";
    };
} LIBEXACTREAL_3.0.0;
